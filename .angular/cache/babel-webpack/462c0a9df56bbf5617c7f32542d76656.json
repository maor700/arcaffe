{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ApplicationRef } from '@angular/core';\nimport { bigmaManagerDb } from '@arcaffe/store';\nimport { wktToGeoJSON } from '@terraformer/wkt';\nimport { liveQuery } from 'dexie';\nimport { from } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../../libs/arcaffe-ui-angular/src/generated/directives/proxies\";\nconst URL_MATERIALS = 'http://localhost:8080/api/materials';\nconst materialsObs$ = from(liveQuery(() => bigmaManagerDb.materials.where('sourceName').equals('materials').toArray()));\nmaterialsObs$.subscribe(arr => console.log('**__ARRIVED__**', arr));\nexport let MaterialsListComponent = /*#__PURE__*/(() => {\n  class MaterialsListComponent {\n    constructor(appRef) {\n      this.appRef = appRef;\n      this.materials$ = from(liveQuery(() => __awaiter(this, void 0, void 0, function* () {\n        const results = yield bigmaManagerDb.materials.where('sourceName').equals('materials').toArray();\n        console.log('inner ', results); // this.appRef.tick();\n\n        return results;\n      })));\n      this.selectedId$ = liveQuery(() => __awaiter(this, void 0, void 0, function* () {\n        var _a;\n\n        return (_a = yield bigmaManagerDb.materials.where('[sourceName+isSelected]').equals(['materials', 1]).first()) === null || _a === void 0 ? void 0 : _a.id;\n      }));\n    }\n\n    ngOnInit() {\n      console.log('');\n      fetch(URL_MATERIALS).then(res => res.json()).then(data => {\n        const newMaterials = data.map(mat => {\n          const {\n            id,\n            additionalProps,\n            geo,\n            displayName\n          } = mat;\n          const {\n            email,\n            phone\n          } = additionalProps;\n          const geometry = geo ? wktToGeoJSON(geo) : null;\n          let geoj = null;\n\n          if (geometry) {\n            geoj = {\n              geometry,\n              type: 'Feature',\n              properties: {\n                name: displayName,\n                content: `name:${displayName} email:${email} phon:${phone}`\n              }\n            };\n          }\n\n          return {\n            id,\n            geo: geoj,\n            sourceName: 'materials',\n            ownerApp: 'materials-app',\n            visibilityOnMap: 'on',\n            type: 'material',\n            additionalProps: additionalProps\n          };\n        });\n        bigmaManagerDb.materials.bulkPut(newMaterials);\n      });\n    }\n\n    userSelectHandler(material) {\n      bigmaManagerDb.selectMaterialToggle(material.id);\n    }\n\n  }\n\n  MaterialsListComponent.ɵfac = function MaterialsListComponent_Factory(t) {\n    return new (t || MaterialsListComponent)(i0.ɵɵdirectiveInject(i0.ApplicationRef));\n  };\n\n  MaterialsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MaterialsListComponent,\n    selectors: [[\"arcaffe-materials-list\"]],\n    decls: 10,\n    vars: 8,\n    consts: [[1, \"container\"], [\"sourceName\", \"materials\"], [\"slot\", \"item-template\"]],\n    template: function MaterialsListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"ui-list\", 1);\n        i0.ɵɵelementStart(2, \"template\", 2);\n        i0.ɵɵtext(3, \"\\n      \");\n        i0.ɵɵelementStart(4, \"span\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \"\\n      \");\n        i0.ɵɵelementStart(7, \"span\");\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \"\\n    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate4(\" \", \"{\", \"\", \"{\", \" displayName \", \"}\", \"\", \"}\", \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate4(\" \", \"{\", \"\", \"{\", \" additionalProps.email \", \"}\", \"\", \"}\", \" \");\n      }\n    },\n    directives: [i1.UiList],\n    styles: [\".material-list-con[_ngcontent-%COMP%]{display:flex;flex-direction:column;color:#eee}.material-list-con[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]{display:flex;grid-gap:1em;gap:1em;padding:.5em;border-bottom:1px solid gray}.material-list-con[_ngcontent-%COMP%]   .item.selected[_ngcontent-%COMP%]{background-color:#00ffff8f}.material-list-con[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:1.5em}\"],\n    changeDetection: 0\n  });\n  return MaterialsListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}